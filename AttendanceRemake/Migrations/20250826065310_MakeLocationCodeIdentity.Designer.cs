// <auto-generated />
using System;
using AttendanceRemake.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AttendanceRemake.Migrations
{
    [DbContext(typeof(AttendanceContext))]
    [Migration("20250826065310_MakeLocationCodeIdentity")]
    partial class MakeLocationCodeIdentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1256_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AttendanceRemake.Models.Attendance", b =>
                {
                    b.Property<long>("AttCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AttCode"));

                    b.Property<int>("CurTimPlan")
                        .HasColumnType("int");

                    b.Property<int>("FingerCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("IodateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("IODateTime");

                    b.Property<string>("NodeSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("image");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TrType")
                        .HasColumnType("int");

                    b.HasKey("AttCode");

                    b.HasIndex(new[] { "IodateTime", "TrType", "FingerCode" }, "IODateTimeTrTypeFingerCode_IX");

                    b.HasIndex(new[] { "FingerCode", "Status", "TrType", "IodateTime" }, "PF_FCODE_STATUS_TYPE_IOTIME");

                    b.ToTable("Attendance", (string)null);
                });

            modelBuilder.Entity("AttendanceRemake.Models.EmpAllow", b =>
                {
                    b.Property<long>("Serial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Serial"));

                    b.Property<int>("AllowTimeCode")
                        .HasColumnType("int");

                    b.Property<int>("DedHr")
                        .HasColumnType("int");

                    b.Property<int>("EmpNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("RealStartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Serial");

                    b.HasIndex("EmpNo");

                    b.ToTable("EmpAllow", (string)null);
                });

            modelBuilder.Entity("AttendanceRemake.Models.Employee", b =>
                {
                    b.Property<int>("EmpNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpNo"));

                    b.Property<short>("CheckLate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)1);

                    b.Property<int>("DeptCode")
                        .HasColumnType("int");

                    b.Property<int>("FingerCode")
                        .HasColumnType("int");

                    b.Property<bool>("HasAllow")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasPass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("InLeave")
                        .HasColumnType("bit");

                    b.Property<int>("JobType")
                        .HasColumnType("int");

                    b.Property<int?>("LocCode")
                        .HasColumnType("int");

                    b.Property<string>("NameA")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameE")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RegNo")
                        .HasColumnType("int");

                    b.Property<short>("Sex")
                        .HasColumnType("smallint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TimingCode")
                        .HasColumnType("int");

                    b.HasKey("EmpNo")
                        .HasName("PK_Employee_1");

                    b.HasIndex("TimingCode");

                    b.HasIndex(new[] { "FingerCode" }, "_dta_index_Employee_6_2110630562__K2");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("AttendanceRemake.Models.Floor", b =>
                {
                    b.Property<string>("DescA")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DescB")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Floor1")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Floor");

                    b.ToTable("Floors");
                });

            modelBuilder.Entity("AttendanceRemake.Models.Location", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("DescA")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "descA");

                    b.Property<string>("DescE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "descE");

                    b.HasKey("Code");

                    b.ToTable("Location", (string)null);
                });

            modelBuilder.Entity("AttendanceRemake.Models.Node", b =>
                {
                    b.Property<string>("SerialNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DescA")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DescE")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Floor")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("LocCode")
                        .HasColumnType("int");

                    b.HasKey("SerialNo");

                    b.ToTable("Nodes");
                });

            modelBuilder.Entity("AttendanceRemake.Models.TimingPlan", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<bool?>("Activity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("CanGoBefore")
                        .HasColumnType("bit");

                    b.Property<string>("DescA")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DescE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FromTime")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("IsRamadan")
                        .HasColumnType("bit");

                    b.Property<string>("RmdFromTime")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("RmdToTime")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("ToTime")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Code");

                    b.ToTable("TimingPlan", (string)null);
                });

            modelBuilder.Entity("AttendanceRemake.Models.EmpAllow", b =>
                {
                    b.HasOne("AttendanceRemake.Models.Employee", "EmpNoNavigation")
                        .WithMany("EmpAllows")
                        .HasForeignKey("EmpNo")
                        .IsRequired()
                        .HasConstraintName("FK_EmpAllow_Employee");

                    b.Navigation("EmpNoNavigation");
                });

            modelBuilder.Entity("AttendanceRemake.Models.Employee", b =>
                {
                    b.HasOne("AttendanceRemake.Models.TimingPlan", "TimingCodeNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("TimingCode")
                        .IsRequired()
                        .HasConstraintName("FK_Employee_TimingPlan");

                    b.Navigation("TimingCodeNavigation");
                });

            modelBuilder.Entity("AttendanceRemake.Models.Employee", b =>
                {
                    b.Navigation("EmpAllows");
                });

            modelBuilder.Entity("AttendanceRemake.Models.TimingPlan", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
